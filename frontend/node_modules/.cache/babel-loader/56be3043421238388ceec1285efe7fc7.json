{"ast":null,"code":"var _jsxFileName = \"/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/Admin/OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport { deleteOrder, getAllOrders, clearErrors } from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderList = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    orders\n  } = useSelector(state => state.allOrders);\n  const {\n    error: deleteError,\n    isDeleted\n  } = useSelector(state => state.order);\n\n  const deleteOrderHandler = id => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: params => {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.4\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/order/${params.getValue(params.id, \"id\")}`,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteOrderHandler(params.getValue(params.id, \"id\")),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach(item => {\n    rows.push({\n      id: item._id,\n      itemsQty: item.orderItems.length,\n      amount: item.totalPrice,\n      status: item.orderStatus\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL ORDERS - Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL ORDERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderList, \"lE+J41SEfZ7Okr4q+rJkL6fui6A=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/Admin/OrderList.js"],"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useAlert","Button","MetaData","EditIcon","DeleteIcon","SideBar","deleteOrder","getAllOrders","clearErrors","DELETE_ORDER_RESET","OrderList","history","dispatch","alert","error","orders","state","allOrders","deleteError","isDeleted","order","deleteOrderHandler","id","success","push","type","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","sortable","renderCell","rows","forEach","item","_id","itemsQty","orderItems","length","amount","totalPrice","status","orderStatus"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./productList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SideBar from \"./Sidebar\";\nimport {\n  deleteOrder,\n  getAllOrders,\n  clearErrors,\n} from \"../../actions/orderAction\";\nimport { DELETE_ORDER_RESET } from \"../../constants/orderConstants\";\n\nconst OrderList = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const alert = useAlert();\n\n  const { error, orders } = useSelector((state) => state.allOrders);\n\n  const { error: deleteError, isDeleted } = useSelector((state) => state.order);\n\n  const deleteOrderHandler = (id) => {\n    dispatch(deleteOrder(id));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success(\"Order Deleted Successfully\");\n      history.push(\"/admin/orders\");\n      dispatch({ type: DELETE_ORDER_RESET });\n    }\n\n    dispatch(getAllOrders());\n  }, [dispatch, alert, error, deleteError, history, isDeleted]);\n\n  const columns = [\n    { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\n\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      minWidth: 150,\n      flex: 0.5,\n      cellClassName: (params) => {\n        return params.getValue(params.id, \"status\") === \"Delivered\"\n          ? \"greenColor\"\n          : \"redColor\";\n      },\n    },\n    {\n      field: \"itemsQty\",\n      headerName: \"Items Qty\",\n      type: \"number\",\n      minWidth: 150,\n      flex: 0.4,\n    },\n\n    {\n      field: \"amount\",\n      headerName: \"Amount\",\n      type: \"number\",\n      minWidth: 270,\n      flex: 0.5,\n    },\n\n    {\n      field: \"actions\",\n      flex: 0.3,\n      headerName: \"Actions\",\n      minWidth: 150,\n      type: \"number\",\n      sortable: false,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Link to={`/admin/order/${params.getValue(params.id, \"id\")}`}>\n              <EditIcon />\n            </Link>\n\n            <Button\n              onClick={() =>\n                deleteOrderHandler(params.getValue(params.id, \"id\"))\n              }\n            >\n              <DeleteIcon />\n            </Button>\n          </Fragment>\n        );\n      },\n    },\n  ];\n\n  const rows = [];\n\n  orders &&\n    orders.forEach((item) => {\n      rows.push({\n        id: item._id,\n        itemsQty: item.orderItems.length,\n        amount: item.totalPrice,\n        status: item.orderStatus,\n      });\n    });\n\n  return (\n    <Fragment>\n      <MetaData title={`ALL ORDERS - Admin`} />\n\n      <div className=\"dashboard\">\n        <SideBar />\n        <div className=\"productListContainer\">\n          <h1 id=\"productListHeading\">ALL ORDERS</h1>\n\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            disableSelectionOnClick\n            className=\"productListTable\"\n            autoHeight\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}