{"ast":null,"code":"var _jsxFileName = \"/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/User/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    success,\n    loading\n  } = useSelector(state => state.forgotPassword);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const resetPasswordSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n      history.push(\"/login\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MetaData, {\n        title: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetPasswordContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetPasswordBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"resetPasswordHeading\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"resetPasswordForm\",\n            onSubmit: resetPasswordSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"New Password\",\n                required: true,\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loginPassword\",\n              children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                required: true,\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update\",\n              className: \"resetPasswordBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"zQuuBs3W7VNa2po1sA4FWSswj4w=\", false, function () {\n  return [useDispatch, useAlert, useSelector];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/User/ResetPassword.js"],"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","resetPassword","useAlert","MetaData","LockOpenIcon","LockIcon","ResetPassword","history","match","dispatch","alert","error","success","loading","state","forgotPassword","password","setPassword","confirmPassword","setConfirmPassword","resetPasswordSubmit","e","preventDefault","myForm","FormData","set","params","token","push","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/MetaData\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst ResetPassword = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { error, success, loading } = useSelector(\n    (state) => state.forgotPassword\n  );\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const resetPasswordSubmit = (e) => {\n    e.preventDefault();\n\n    const myForm = new FormData();\n\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Change Password\" />\n          <div className=\"resetPasswordContainer\">\n            <div className=\"resetPasswordBox\">\n              <h2 className=\"resetPasswordHeading\">Update Profile</h2>\n\n              <form\n                className=\"resetPasswordForm\"\n                onSubmit={resetPasswordSubmit}\n              >\n                <div>\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n                <div className=\"loginPassword\">\n                  <LockIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    required\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Update\"\n                  className=\"resetPasswordBtn\"\n                />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}