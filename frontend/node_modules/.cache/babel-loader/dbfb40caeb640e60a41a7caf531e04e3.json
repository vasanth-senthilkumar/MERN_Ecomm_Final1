{"ast":null,"code":"var _jsxFileName = \"/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/Cart/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useRef } from \"react\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport { Typography } from \"@material-ui/core\";\nimport { useAlert } from \"react-alert\";\nimport { CardNumberElement, CardCvcElement, CardExpiryElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport \"./payment.css\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { createOrder, clearErrors } from \"../../actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = ({\n  history\n}) => {\n  _s();\n\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const payBtn = useRef(null);\n  const {\n    shippingInfo,\n    cartItems\n  } = useSelector(state => state.cart);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    error\n  } = useSelector(state => state.newOrder);\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice * 100)\n  };\n  const order = {\n    shippingInfo,\n    orderItems: cartItems,\n    itemsPrice: orderInfo.subtotal,\n    taxPrice: orderInfo.tax,\n    shippingPrice: orderInfo.shippingCharges,\n    totalPrice: orderInfo.totalPrice\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    payBtn.current.disabled = true;\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/v1/payment/process\", paymentData, config);\n      const client_secret = data.client_secret;\n      if (!stripe || !elements) return;\n      const result = await stripe.confirmCardPayment(client_secret, {\n        payment_method: {\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: user.name,\n            email: user.email,\n            address: {\n              line1: shippingInfo.address,\n              city: shippingInfo.city,\n              state: shippingInfo.state,\n              postal_code: shippingInfo.pinCode,\n              country: shippingInfo.country\n            }\n          }\n        }\n      });\n\n      if (result.error) {\n        payBtn.current.disabled = false;\n        alert.error(result.error.message);\n      } else {\n        if (result.paymentIntent.status === \"succeeded\") {\n          order.paymentInfo = {\n            id: result.paymentIntent.id,\n            status: result.paymentIntent.status\n          };\n          dispatch(createOrder(order));\n          history.push(\"/success\");\n        } else {\n          alert.error(\"There's some issue while processing payment \");\n        }\n      }\n    } catch (error) {\n      payBtn.current.disabled = false;\n      alert.error(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, error, alert]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      activeStep: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paymentContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"paymentForm\",\n        onSubmit: e => submitHandler(e),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Card Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CreditCardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardNumberElement, {\n            className: \"paymentInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(EventIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n            className: \"paymentInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(VpnKeyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardCvcElement, {\n            className: \"paymentInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: `Pay - â‚¹${orderInfo && orderInfo.totalPrice}`,\n          ref: payBtn,\n          className: \"paymentFormBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"sMqqzsKzvSTottgBwmUkY8L++zg=\", false, function () {\n  return [useDispatch, useAlert, useStripe, useElements, useSelector, useSelector, useSelector];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/users/svasanth/Desktop/multi1/MERN001/frontend/src/component/Cart/Payment.js"],"names":["React","Fragment","useEffect","useRef","CheckoutSteps","useSelector","useDispatch","MetaData","Typography","useAlert","CardNumberElement","CardCvcElement","CardExpiryElement","useStripe","useElements","axios","CreditCardIcon","EventIcon","VpnKeyIcon","createOrder","clearErrors","Payment","history","orderInfo","JSON","parse","sessionStorage","getItem","dispatch","alert","stripe","elements","payBtn","shippingInfo","cartItems","state","cart","user","error","newOrder","paymentData","amount","Math","round","totalPrice","order","orderItems","itemsPrice","subtotal","taxPrice","tax","shippingPrice","shippingCharges","submitHandler","e","preventDefault","current","disabled","config","headers","data","post","client_secret","result","confirmCardPayment","payment_method","card","getElement","billing_details","name","email","address","line1","city","postal_code","pinCode","country","message","paymentIntent","status","paymentInfo","id","push","response"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useRef } from \"react\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport { Typography } from \"@material-ui/core\";\nimport { useAlert } from \"react-alert\";\nimport {\n  CardNumberElement,\n  CardCvcElement,\n  CardExpiryElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\n\nimport axios from \"axios\";\nimport \"./payment.css\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport { createOrder, clearErrors } from \"../../actions/orderAction\";\n\nconst Payment = ({ history }) => {\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const stripe = useStripe();\n  const elements = useElements();\n  const payBtn = useRef(null);\n\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n  const { user } = useSelector((state) => state.user);\n  const { error } = useSelector((state) => state.newOrder);\n\n  const paymentData = {\n    amount: Math.round(orderInfo.totalPrice * 100),\n  };\n\n  const order = {\n    shippingInfo,\n    orderItems: cartItems,\n    itemsPrice: orderInfo.subtotal,\n    taxPrice: orderInfo.tax,\n    shippingPrice: orderInfo.shippingCharges,\n    totalPrice: orderInfo.totalPrice,\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    payBtn.current.disabled = true;\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/v1/payment/process\",\n        paymentData,\n        config\n      );\n\n      const client_secret = data.client_secret;\n\n      if (!stripe || !elements) return;\n\n      const result = await stripe.confirmCardPayment(client_secret, {\n        payment_method: {\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: user.name,\n            email: user.email,\n            address: {\n              line1: shippingInfo.address,\n              city: shippingInfo.city,\n              state: shippingInfo.state,\n              postal_code: shippingInfo.pinCode,\n              country: shippingInfo.country,\n            },\n          },\n        },\n      });\n\n      if (result.error) {\n        payBtn.current.disabled = false;\n\n        alert.error(result.error.message);\n      } else {\n        if (result.paymentIntent.status === \"succeeded\") {\n          order.paymentInfo = {\n            id: result.paymentIntent.id,\n            status: result.paymentIntent.status,\n          };\n\n          dispatch(createOrder(order));\n\n          history.push(\"/success\");\n        } else {\n          alert.error(\"There's some issue while processing payment \");\n        }\n      }\n    } catch (error) {\n      payBtn.current.disabled = false;\n      alert.error(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, error, alert]);\n\n  return (\n    <Fragment>\n      <MetaData title=\"Payment\" />\n      <CheckoutSteps activeStep={2} />\n      <div className=\"paymentContainer\">\n        <form className=\"paymentForm\" onSubmit={(e) => submitHandler(e)}>\n          <Typography>Card Info</Typography>\n          <div>\n            <CreditCardIcon />\n            <CardNumberElement className=\"paymentInput\" />\n          </div>\n          <div>\n            <EventIcon />\n            <CardExpiryElement className=\"paymentInput\" />\n          </div>\n          <div>\n            <VpnKeyIcon />\n            <CardCvcElement className=\"paymentInput\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            value={`Pay - â‚¹${orderInfo && orderInfo.totalPrice}`}\n            ref={payBtn}\n            className=\"paymentFormBtn\"\n          />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}